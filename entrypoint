#!/bin/sh -e

if [ -z "${WALLET_ADDRESS}" ]; then
	echo "!!! WALLET_ADDRESS must be set to an ERC20 wallet address";
	exit 1;
fi;

if [ -n "${DAEMONADDRESS}" ]; then
  sed -i "s/127\.0\.0\.1/${DAEMONADDRESS}/" /usr/lib/node_modules/storjshare-daemon/lib/config/daemon.js
fi

# If our hostname has a hyphen-delimited suffix with a unique identifier, e.g. the ordinal if
#    we're in a Kubernetes statefulset, use that suffix as a subdirectry in the main DATADIR
if [ "$(echo "${USE_HOSTNAME_SUFFIX}" | tr /a-z/ /A-Z/)" == 'TRUE' ]; then
	DATADIR="${DATADIR}/$(hostname | rev | cut -d- -f1 | rev)";
fi;

storjshare daemon -F &
sleep 1;

mkdir -pv "${DATADIR}/share" "${DATADIR}/log";
if [ ! -f "${DATADIR}/config.json" ]; then
	CONFIGURE_COMMAND="storjshare create --storj "${WALLET_ADDRESS}" --storage "${DATADIR}/share" --size "${SHARE_SIZE}" --rpcport "${RPCPORT}" --rpcaddress "${RPCADDRESS}" --logdir "${DATADIR}/log" --outfile "${DATADIR}/config.json" --noedit";
	if [ "$(echo "${TUNNELING_REQUIRED}")" == 'TRUE' ]; then
		CONFIGURE_COMMAND=""${CONFIGURE_COMMAND}" --tunnelportmin 4001 --tunnelportmax 4003";
	else
		CONFIGURE_COMMAND=""${CONFIGURE_COMMAND}" --manualforwarding";
	fi;
	$CONFIGURE_COMMAND
fi;

storjshare start --config "${DATADIR}/config.json";

#PURGE LOGS - COMMUNITY REQUEST, single node
if [ "$(echo "${DEL_LOGS}")" == 'TRUE' ]; then
   find "${DATADIR}/log" -type f -mtime +"${DEL_LOGS_DAYS}" -iname "*.log" -delete &
fi;

## MULTIPLE NODE SUPPORT - COMMUNITY REQUEST
if [ -n "${NODE_COUNT}" ]; then
  i=1;
  j=4000;
  while [ "$i" -le "${NODE_COUNT}" ]; do
         mkdir -pv "${DATADIR}/${NODE_DIR}$i/share" "${DATADIR}/${NODE_DIR}$i/log";
         if [ ! -f "${DATADIR}/${NODE_DIR}$i/config.json" ]; then
             j=$(( j + 1 ));
             storjshare create --storj "${WALLET_ADDRESS}" --storage "${DATADIR}/${NODE_DIR}$i/share" --size "${SHARE_SIZE}" --rpcport "$j" --rpcaddress "${RPCADDRESS}" --manualforwarding --logdir "${DATADIR}/${NODE_DIR}$i/log" --outfile "${DATADIR}/${NODE_DIR}$i/config.json" --noedit;
	 else
            #PURGE LOGS - COMMUNITY REQUEST
             if [ "$(echo "${DEL_LOGS}")" == 'TRUE' ]; then
                find "${DATADIR}/${NODE_DIR}$i/log" -type f -mtime +"${DEL_LOGS_DAYS}" -iname "*.log" -delete &
                echo "Delete TRUE";
             fi;
         fi;
      storjshare start --config "${DATADIR}/${NODE_DIR}$i/config.json";
      i=$(( i + 1 ));
  done;
fi;
## END OF MULTIPLE NODE MOD

if [ -n "${STORJ_MONITOR_API_KEY}" ]; then
    sleep 10;
	sed -i "s/YOUR-TOKEN-HERE/${STORJ_MONITOR_API_KEY}/" /opt/StorjMonitor/storjMonitor.js;
	cd /opt/StorjMonitor;
	(/opt/StorjMonitor/storjMonitor.sh &) &
fi

wait;
